import keyboards
from handlers import states
from fsm import AdditionalStep
from aiogram import types
from dispatcher import bot, dp
from bot import db


@dp.message_handler(commands=['start'])
async def welcome(message: types.Message):
    sti = open('static/welcome.webp', 'rb')
    await message.answer_sticker(sti)
    keyboard = keyboards.get_main_kb()
    bot_name = await bot.get_me()

    await message.answer(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!\n–Ø - *{bot_name.first_name}* ü§ñ, "
                         f"–±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–∫—É–ø–æ–∫.\n–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º, "
                         f"–≤–≤–µ–¥–∏—Ç–µ /help", parse_mode='Markdown', reply_markup=keyboard)

    user_id = message.from_user.id
    user_name = message.from_user.first_name
    db.db_add_user(user_id, user_name)


@dp.message_handler(commands=['stop'])
async def goodbye(message: types.Message):
    if db.db_check_existence(message):
        user_id = message.from_user.id
        user_name = message.from_user.first_name
        await message.answer(f"–ë—ã–ª–æ –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ {user_name}."
                             f"\n–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ. –ï—Å–ª–∏ —Ç–µ–±–µ –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Å–Ω–æ–≤–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –º–æ—è –ø–æ–º–æ—â—å, —Ç—ã –∑–Ω–∞–µ—à—å, "
                             f"–≥–¥–µ –º–µ–Ω—è –Ω–∞–π—Ç–∏..."
                             f"\n–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ.üëãüèº")

        db.db_delete_user(user_id)
    else:
        await message.answer("ü´ß –ò–∑–≤–∏–Ω–∏, –Ω–æ —Ç—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ –º–Ω–æ–π –≤–≤–µ–¥–∏ /start")


@dp.message_handler(commands=['show_buttons'])
async def get_buttons(message: types.Message):
    if db.db_check_existence(message):
        keyboard = keyboards.get_main_kb()
        await message.answer('–õ–æ–≤–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É ‚å®', reply_markup=keyboard)
    else:
        await message.answer("ü´ß –ò–∑–≤–∏–Ω–∏, –Ω–æ —Ç—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ –º–Ω–æ–π –≤–≤–µ–¥–∏ /start")


@dp.message_handler(commands=['get_my_id'])
async def get_id(message: types.Message):
    user_id = message.from_user.id
    await message.answer(f"–¢–≤–æ–π ID —á—Ç–æ–±—ã –¥–µ–ª–∏—Ç—å—Å—è —Å–ø–∏—Å–∫–∞–º–∏ - *{user_id}*.", parse_mode='Markdown')


@dp.message_handler(commands=['help'])
async def help_message(message: types.Message):
    await message.answer("–ù–∏–∂–µ –Ω–µ–±–æ–ª—å—à–æ–µ INFO –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:"
                         "\n\n‚å® /show_buttons - –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å–æ –º–Ω–æ–π, –µ—Å–ª–∏ –ø—Ä–æ–ø–∞–ª–∏."
                         "\nüÜò /help - —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
                         "\nüÜî /get_my_id - –≤—ã–≤–µ–¥–µ—Ç —Ç–≤–æ–π id"
                         "\n‚õî /stop - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –±–æ—Ç–∞"
                         "\nü´∂üèº–¢–∞–∫–∂–µ –±—ã–ª–æ –±—ã –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Ç–µ–±—è feedback."
                         "\nüí°–ï—Å–ª–∏ –Ω–µ —Å–ª–æ–∂–Ω–æ, –Ω–∞–ø–∏—à–∏, —á—Ç–æ –ø–æ —Ç–≤–æ–µ–º—É –º–Ω–µ–Ω–∏—é –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å/—É–±—Ä–∞—Ç—å/–ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å."
                         "\nüí¨–ü–∏—à–∏ –Ω–∞–ø—Ä—è–º—É—é –µ–º—É @truemahoney, –æ–Ω –≤—Å–µ —Å–¥–µ–ª–∞–µ—Ç.üóø")


@dp.message_handler(commands=['add_list'])
async def add_list(message: types.Message):
    if db.db_check_existence(message):
        await message.answer("–ö–∞–∫ –Ω–∞–∑–æ–≤–µ–º –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫?")
        await AdditionalStep.add_list_next_message.set()
    else:
        await message.answer("ü´ß –ò–∑–≤–∏–Ω–∏, –Ω–æ —Ç—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ –º–Ω–æ–π –≤–≤–µ–¥–∏ /start")


@dp.message_handler(commands=['add_product', 'show_lists', 'delete_list', 'share_list'])
async def manage_lists(message: types.Message):
    command = message.text
    if db.db_check_existence(message):
        dict_of_lists = db.db_recourse(message)
        list_of_titles = list(dict_of_lists.keys())
        if list_of_titles:
            if command == '–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã':
                keyboard = keyboards.manage_inline_lists_kb(list_of_titles, 'add_to_list')
                await message.answer('–í –∫–∞–∫–æ–π —Å–ø–∏—Å–æ–∫ –∑–∞–Ω–µ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç—ã?', reply_markup=keyboard)
            elif command == '–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–∫–∏':
                keyboard = keyboards.get_inline_lists_kb(list_of_titles, message)
                await message.answer('–ù–∏–∂–µ –ø–µ—Ä–µ—á–µ–Ω—å –≤—Å–µ—Ö —Ç–≤–æ–∏—Ö —Å–ø–∏—Å–∫–æ–≤.\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞–∂–º–∏ –Ω–∞ –Ω—É–∂–Ω—ã–π.',
                                     reply_markup=keyboard)
            elif command == '–£–¥–∞–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫':
                keyboard = keyboards.manage_inline_lists_kb(list_of_titles, 'delete_list')
                await message.answer('–í—ã–±–µ—Ä–∏ —Å–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –º–Ω–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å:', reply_markup=keyboard)
            elif command == '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–ø–∏—Å–∫–æ–º':
                keyboard = keyboards.manage_inline_lists_kb(list_of_titles, 'share_list')
                await message.answer('–í—ã–±–µ—Ä–∏ —Å–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—á–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è:', reply_markup=keyboard)
        else:
            await message.answer("ü´ß –ò–∑–≤–∏–Ω–∏, –Ω–æ —É —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞. –°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —Ö–æ—Ç—è –±—ã "
                                 "–æ–¥–∏–Ω.")
    else:
        await message.answer("ü´ß –ò–∑–≤–∏–Ω–∏, –Ω–æ —Ç—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ –º–Ω–æ–π –≤–≤–µ–¥–∏ /start")


@dp.message_handler(content_types=['text'])
async def bot_answer(message: types.Message):
    if message.chat.type == 'private':
        if message.text == '–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–∫–∏':
            await manage_lists(message)
        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫':
            await add_list(message)
        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã':
            await manage_lists(message)
        elif message.text == '–£–¥–∞–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫':
            await manage_lists(message)
        elif message.text == '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–ø–∏—Å–∫–æ–º':
            await manage_lists(message)
        else:
            await message.answer('–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã üóø'
                                 '\n–î–ª—è –æ–±—â–µ–Ω–∏—è —Å–æ –º–Ω–æ–π –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /help, —Ç–∞–º –Ω–µ–±–æ–ª—å—à–æ–µ '
                                 'INFO –ø–æ –∫–æ–º–∞–Ω–¥–∞–º.')
